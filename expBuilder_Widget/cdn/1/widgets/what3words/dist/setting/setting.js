System.register(["jimu-core","jimu-ui","jimu-ui/advanced/utility-selector","jimu-ui/advanced/setting-components"],(function(e,t){var o={},i={},s={},a={};return{setters:[function(e){o.FormattedMessage=e.FormattedMessage,o.Immutable=e.Immutable,o.React=e.React,o.SupportedUtilityType=e.SupportedUtilityType,o.css=e.css,o.getAppStore=e.getAppStore,o.jsx=e.jsx},function(e){i.CollapsablePanel=e.CollapsablePanel,i.Icon=e.Icon,i.Label=e.Label,i.Option=e.Option,i.Radio=e.Radio,i.Select=e.Select,i.Switch=e.Switch,i.TextInput=e.TextInput,i.Tooltip=e.Tooltip},function(e){s.UtilitySelector=e.UtilitySelector},function(e){a.MapWidgetSelector=e.MapWidgetSelector,a.SettingRow=e.SettingRow,a.SettingSection=e.SettingSection}],execute:function(){e((()=>{var e={508:e=>{e.exports='<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 16"><path fill="#000" d="M8 5.5a1 1 0 1 0 0-2 1 1 0 0 0 0 2M6.5 7.5A.5.5 0 0 1 7 7h1.5v4.5h1a.5.5 0 0 1 0 1h-3a.5.5 0 0 1 0-1h1V8H7a.5.5 0 0 1-.5-.5"></path><path fill="#000" fill-rule="evenodd" d="M8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16m0-1A7 7 0 1 0 8 1a7 7 0 0 0 0 14" clip-rule="evenodd"></path></svg>'},244:e=>{"use strict";e.exports=o},321:e=>{"use strict";e.exports=i},298:e=>{"use strict";e.exports=a},371:e=>{"use strict";e.exports=s}},t={};function n(o){var i=t[o];if(void 0!==i)return i.exports;var s=t[o]={exports:{}};return e[o](s,s.exports,n),s.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.p="";var l={};return n.p=window.jimuConfig.baseUrl,(()=>{"use strict";n.r(l),n.d(l,{__set_webpack_public_path__:()=>w,default:()=>v});var e=n(244),t=n(321),o=n(371),i=n(298);const s={selectMapWidget:"Select a Map",apiKey:"Enter what3words API Key",w3wLocator:"Select your what3words locator",addressSettingsLabel:"Locator Settings",defaultGeocodeUrlTooltip:"By default, ArcGIS world geocoding service will be used as locator source. Click on Select Utility button to select your what3words geocode service.",locatorServiceLabel:"Set locator",alertPopupTitle:"Select Geocode Service",invalidLocatorServiceURL:"Please enter valid geocode service url",widgetDisplayOptions:"Widget Display Options",displayCoordinates:"Display Latitude & Longitude",displayCopyButton:"Display Copy Button",displayNearestPlace:"Display Nearest Place Text",displayMapsiteButton:"Display Mapsite Button",displayMapAnnotation:"Display Map Annotation",w3wLanguage:"Select what3words language"};var a=n(508),r=n.n(a);const d=[e.SupportedUtilityType.GeoCoding];class c extends e.React.PureComponent{constructor(t){var o,i,a,n,l,r,d,c,p,g;if(super(t),this.geocodeTextBox=e.React.createRef(),this.nls=e=>this.props.intl.formatMessage({id:e,defaultMessage:s[e]}),this.componentDidMount=()=>{this.props.onAddressSettingsUpdated("geocodeServiceUrl",this.state.geocodeLocatorUrl)},this.onSetLocatorClicked=()=>{this.setState({isAlertPopupOpen:!0,isInvalidValue:!1},(()=>{setTimeout((()=>{const e=window.jimuUA.browser?(window.jimuUA.browser.name+"").toLowerCase():"";"chrome"===e||"microsoft edge"===e?(this.geocodeTextBox.current.selectionStart=this.geocodeTextBox.current.selectionEnd=0,this.geocodeTextBox.current.focus()):(this.props.isRTL||(this.geocodeTextBox.current.selectionStart=this.geocodeTextBox.current.selectionEnd=0),this.geocodeTextBox.current.focus())}),1e3)})),setTimeout((()=>{const e=this.state.geocodeLocatorUrl;this.setState({updateGeocodeLocatorUrl:e})}),500)},this.onAlertOkButtonClicked=()=>{""!==this.geocodeTextBox.current.value&&(this.state.isInvalidValue||(this.setState({geocodeLocatorUrl:this.geocodeTextBox.current.value}),this.props.onAddressSettingsUpdated("geocodeServiceUrl",this.geocodeTextBox.current.value),this.onAlertCloseButtonClicked()))},this.onAlertCloseButtonClicked=()=>{this.setState({isAlertPopupOpen:!1})},this.onUtilityChange=e=>{let t=!1;e.length<1&&(t=!0),this.setState({showDefaultGeocodeUrl:t,utilities:e}),this.props.onAddressSettingsUpdated("useUtilitiesGeocodeService",e)},"apiKey"===t.config.mode)return;this.geocodeTextBox=e.React.createRef();let u="https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer",h=!0;(null===(o=t.config.useUtilitiesGeocodeService)||void 0===o?void 0:o.length)>0?h=!1:t.config&&t.config.geocodeServiceUrl?u=t.config.geocodeServiceUrl:(null===(l=null===(n=null===(a=null===(i=t.portalSelf)||void 0===i?void 0:i.helperServices)||void 0===a?void 0:a.geocode)||void 0===n?void 0:n[0])||void 0===l?void 0:l.url)&&(u=null===(p=null===(c=null===(d=null===(r=t.portalSelf)||void 0===r?void 0:r.helperServices)||void 0===d?void 0:d.geocode)||void 0===c?void 0:c[0])||void 0===p?void 0:p.url),this.state={geocodeLocatorUrl:u,updateGeocodeLocatorUrl:u,isAlertPopupOpen:!1,isInvalidValue:!1,utilities:(null===(g=t.config)||void 0===g?void 0:g.useUtilitiesGeocodeService)?t.config.useUtilitiesGeocodeService:[],showDefaultGeocodeUrl:h}}render(){return(0,e.jsx)("div",{style:{height:"100%",marginTop:"5px"}},(0,e.jsx)("div",{css:(s=this.props.theme,e.css`

  .locator-url {
    background-color: ${s.ref.palette.neutral[800]};
    padding: 2px;
  }

  .locator-url label {
    word-break: break-all;
  }

  `)},(0,e.jsx)(i.SettingRow,{flow:"wrap"},(0,e.jsx)(o.UtilitySelector,{useUtilities:(0,e.Immutable)(this.state.utilities?this.state.utilities:[]),onChange:this.onUtilityChange,showRemove:!0,closePopupOnSelect:!0,types:d})),this.state.showDefaultGeocodeUrl&&(0,e.jsx)(i.SettingRow,{className:"locator-url"},(0,e.jsx)(t.Label,{tabIndex:0,"aria-label":this.state.geocodeLocatorUrl},this.state.geocodeLocatorUrl),(0,e.jsx)(t.Tooltip,{role:"tooltip",tabIndex:0,"aria-label":this.nls("defaultGeocodeUrlTooltip"),title:this.nls("defaultGeocodeUrlTooltip"),showArrow:!0,placement:"top"},(0,e.jsx)("div",{className:"ml-2 d-inline defGeocode-tooltip"},(0,e.jsx)(t.Icon,{size:14,icon:r()}))))));var s}}var p=function(e,t,o,i){return new(o||(o=Promise))((function(s,a){function n(e){try{r(i.next(e))}catch(e){a(e)}}function l(e){try{r(i.throw(e))}catch(e){a(e)}}function r(e){var t;e.done?s(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(n,l)}r((i=i.apply(e,t||[])).next())}))};const g=(e,t)=>`what3words-ArcGIS-EXB-Widget/${e} (ArcGISExperienceBuilder/${t})`,u=e=>p(void 0,void 0,void 0,(function*(){const{apiKey:t,widgetVersion:o,exbVersion:i}=e;if(!t)throw new Error("API key is required to fetch available languages.");return yield fetch("https://api.what3words.com/v3/available-languages?"+new URLSearchParams({key:t}).toString(),{headers:{"X-W3W-Plugin":g(o,i)}}).then((e=>e.json())).then((({error:e,languages:t})=>{if(e)throw new Error(`${(null==e?void 0:e.code)||"Error"}: ${(null==e?void 0:e.message)||"Unable to fetch available languages"}`);return t}))}));var h=function(e,t,o,i){return new(o||(o=Promise))((function(s,a){function n(e){try{r(i.next(e))}catch(e){a(e)}}function l(e){try{r(i.throw(e))}catch(e){a(e)}}function r(e){var t;e.done?s(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(n,l)}r((i=i.apply(e,t||[])).next())}))};class v extends e.React.PureComponent{constructor(t){var o,i,a,n,l,r;super(t),this.nls=e=>this.props.intl.formatMessage({id:e,defaultMessage:s[e]}),this.setW3wApiKey=e=>h(this,void 0,void 0,(function*(){this.props.onSettingChange({id:this.props.id,config:this.props.config.set("w3wApiKey",e)});try{yield this.fetchLanguages()}catch(e){console.error("Error fetching languages with the updated API key:",e)}})),this.setW3wLanguage=e=>{this.props.onSettingChange({id:this.props.id,config:this.props.config.set("w3wLanguage",e)})},this.onMapWidgetSelected=e=>{this.props.onSettingChange({id:this.props.id,useMapWidgetIds:e})},this.onToggleAddressSettings=()=>{this.setState({isAddressSettingsOpen:!this.state.isAddressSettingsOpen})},this.handleModeChange=e=>{const t=e.target.value;let o=this.props.config.set("mode",t);if("apiKey"===o.mode){const e=o.w3wApiKey;this.setState({tempApiKey:e})}"locatorUrl"===o.mode&&(o=o.set("useUtilitiesGeocodeService",[])),this.props.onSettingChange({id:this.props.id,config:o})},this.handleApiKeySave=()=>h(this,void 0,void 0,(function*(){const{tempApiKey:e}=this.state;if(!e.trim())return console.warn("API Key is empty. Clearing languages."),this.setState({languages:[],apiKeyError:!1}),void this.props.onSettingChange({id:this.props.id,config:this.props.config.set("w3wApiKey","")});this.props.onSettingChange({id:this.props.id,config:this.props.config.set("w3wApiKey",e)});try{const{widgetVersion:t,exbVersion:o}=this,i=yield u({apiKey:e,widgetVersion:t,exbVersion:o}).catch((e=>(console.error((null==e?void 0:e.message)||"Error fetching available languages"),this.props.onSettingChange({id:this.props.id,config:this.props.config.set("w3wLanguage","en")}),[{code:"en",name:"English",nativeName:"English"}])));this.setState({languages:i,apiKeyError:!1})}catch(e){console.error("Error fetching languages with the saved API key:",e),this.setState({languages:[],apiKeyError:!0})}})),this.handleInputChange=e=>{const t=e.target.value;this.setState({tempApiKey:t})},this.updateAddressSettings=(e,t)=>{this.props.onSettingChange({id:this.props.id,config:this.props.config.set(e,t)})},this.state={isAddressSettingsOpen:!0,languages:[],tempApiKey:"apiKey"===this.props.config.mode?this.props.config.w3wApiKey:"",apiKeyError:!1};const d=(0,e.getAppStore)().getState();this.isRTL=(null===(o=null==d?void 0:d.appContext)||void 0===o?void 0:o.isRTL)||!1,this.widgetVersion=(null===(l=null===(n=null===(a=null===(i=null==d?void 0:d.appConfig)||void 0===i?void 0:i.widgets)||void 0===a?void 0:a[this.props.widgetId])||void 0===n?void 0:n.manifest)||void 0===l?void 0:l.version)||"Unknown",this.exbVersion=(null===(r=null==d?void 0:d.appConfig)||void 0===r?void 0:r.exbVersion)||"Unknown"}componentDidMount(){this.fetchLanguages()}fetchLanguages(){return h(this,void 0,void 0,(function*(){if("apiKey"!==this.props.config.mode)return void console.warn("API key is not used. Skipping language fetch.");const e=this.props.config.w3wApiKey;try{const{widgetVersion:t,exbVersion:o}=this,i=yield u({apiKey:e,widgetVersion:t,exbVersion:o}).catch((e=>(console.error((null==e?void 0:e.message)||"Error fetching available languages"),[{code:"en",name:"English",nativeName:"English"}])));this.setState({languages:i})}catch(e){console.error("Error fetching languages:",e)}}))}render(){var o;const{theme:a,config:n,useMapWidgetIds:l,intl:r}=this.props,{tempApiKey:d}=this.state;return(0,e.jsx)("div",{css:e.css`
      label {
        display: inline-flex;
        margin-left: 5px;
      }
      .switch-select {
        background-color: #01AABB;
        border-color: #01AABB;
      }
      .switch-select .switch-slider {
        background-color: #000 !important;
      }
      .switch-select.checked {
        background-color: #000;
        border-color: #01AABB;
      }
      .switch-select.checked .switch-slider {
        background-color: #01AABB !important;
      }

      .api-key-input-row {
        width: 100%;
      }

      .api-key-input-row .btn {
        width: 100%;
        padding: 5px;
        margin-top: 10px;
      }

      .lang-dropdown {
        max-width: 300px;
        max-height: 200px;
        overflow-y: auto;
        font-size: 14px;
        scrollbar-width: thin;
        scrollbar-color: #888 #f0f0f0;
      }

      .lang-dropdown::-webkit-scrollbar {
        width: 8px;
      }

      .lang-dropdown .lang-select button{
        width: 100%;
        height: auto;
      }
      .lang-item {
        display: 'flex' !important;
        flex-direction: 'column' !important;
        font-size: 14px;
        padding: 5px; /* Optional: Add spacing for better readability */
        border-bottom: 1px solid #ddd;
      }

  `,className:"widget-what3words-setting"},(0,e.jsx)(i.SettingSection,{className:"map-selector-section",title:r.formatMessage({id:"selectMapWidget",defaultMessage:s.selectMapWidget})},(0,e.jsx)(i.SettingRow,null,(0,e.jsx)(i.MapWidgetSelector,{useMapWidgetIds:l,onSelect:this.onMapWidgetSelected}))),(0,e.jsx)(i.SettingSection,{title:"Mode Selection"},(0,e.jsx)(i.SettingRow,{flow:"wrap"},(0,e.jsx)(t.Radio,{value:"apiKey",checked:"apiKey"===n.mode,onChange:this.handleModeChange}),(0,e.jsx)("label",null,"Use API Key")),(0,e.jsx)(i.SettingRow,null,(0,e.jsx)(t.Radio,{value:"locatorUrl",checked:"locatorUrl"===n.mode,onChange:this.handleModeChange}),(0,e.jsx)("label",null,"Use Locator URL"))),"apiKey"===n.mode&&(0,e.jsx)(i.SettingSection,{title:"API Key"},(0,e.jsx)(i.SettingRow,{flow:"wrap",className:"api-key-input-row"},(0,e.jsx)(t.TextInput,{className:"w-100",placeholder:"Enter your what3words API key",value:d,onChange:this.handleInputChange}),(0,e.jsx)("button",{className:"btn btn-primary w-100",onClick:this.handleApiKeySave},"Save"))),"apiKey"===n.mode&&(0,e.jsx)(i.SettingSection,{title:"Select Language"},(0,e.jsx)(i.SettingRow,{className:"lang-dropdown"},(0,e.jsx)(t.Select,{className:"lang-select",value:n.w3wLanguage||"en",onChange:e=>{this.setW3wLanguage(e.target.value)},disabled:!this.state.languages||0===this.state.languages.length,placeholder:"Select a language"},null===(o=this.state.languages)||void 0===o?void 0:o.map((o=>(0,e.jsx)(t.Option,{key:o.code,value:o.code},(0,e.jsx)("div",{style:{display:"flex",flexDirection:"column",height:"auto"}},(0,e.jsx)("strong",null,o.nativeName),(0,e.jsx)("small",null,`${o.name} (${o.code})`))))))),(!this.state.languages||0===this.state.languages.length)&&(0,e.jsx)(i.SettingRow,{className:"no-languages-message"},(0,e.jsx)("p",{style:{color:"inherit",fontSize:"14px"}}," ","No languages available. Enter a valid API key.")),this.state.apiKeyError&&(0,e.jsx)(i.SettingRow,{className:"api-key-error"},(0,e.jsx)("p",{style:{color:"inherit",fontSize:"14px"}},"Invalid API key. Please enter a valid key and try again."))),"locatorUrl"===n.mode&&(0,e.jsx)(i.SettingSection,null,(0,e.jsx)(t.CollapsablePanel,{defaultIsOpen:!0,label:this.nls("addressSettingsLabel"),isOpen:this.state.isAddressSettingsOpen,onRequestOpen:this.onToggleAddressSettings,onRequestClose:this.onToggleAddressSettings},(0,e.jsx)(i.SettingRow,{flow:"wrap",className:"w-100"},(0,e.jsx)(c,{intl:r,theme:a,portalSelf:this.props.portalSelf,config:n,isRTL:this.isRTL,onAddressSettingsUpdated:this.updateAddressSettings})))),(0,e.jsx)(i.SettingSection,{className:"map-selector-section",title:r.formatMessage({id:"widgetDisplayOptions",defaultMessage:s.widgetDisplayOptions})},[{key:"displayCoordinates",label:"displayCoordinates"},..."apiKey"===n.mode?[{key:"displayNearestPlace",label:"displayNearestPlace"}]:[],{key:"displayCopyButton",label:"displayCopyButton"},{key:"displayMapsiteButton",label:"displayMapsiteButton"},{key:"displayMapAnnotation",label:"displayMapAnnotation"}].map((({key:o,label:a})=>(0,e.jsx)(i.SettingRow,{key:o},(0,e.jsx)("div",{className:"w-100"},(0,e.jsx)("div",{className:"checkbox-row"},(0,e.jsx)(t.Switch,{checked:(null==n?void 0:n[o])||!1,onChange:e=>{this.props.onSettingChange({id:this.props.id,config:this.props.config.set(o,e.currentTarget.checked)})}}),(0,e.jsx)("label",null,(0,e.jsx)(e.FormattedMessage,{id:a,defaultMessage:s[a]})))))))))}}function w(e){n.p=e}})(),l})())}}}));